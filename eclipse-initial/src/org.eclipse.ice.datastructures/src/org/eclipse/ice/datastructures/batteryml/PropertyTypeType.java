//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.22 at 11:59:10 AM EDT 
//


package org.eclipse.ice.datastructures.batteryml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PropertyTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PropertyTypeType">
 *   &lt;restriction base="{BatteryML:2.0}ShortTokenType">
 *     &lt;enumeration value="Composition"/>
 *     &lt;enumeration value="Physical"/>
 *     &lt;enumeration value="Chemical"/>
 *     &lt;enumeration value="Thermodynamics"/>
 *     &lt;enumeration value="Kinetics"/>
 *     &lt;enumeration value="Transport"/>
 *     &lt;enumeration value="Thermal"/>
 *     &lt;enumeration value="Mechanical"/>
 *     &lt;enumeration value="Geometrical"/>
 *     &lt;enumeration value="Cost"/>
 *     &lt;enumeration value="PropertyOther"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PropertyTypeType")
@XmlEnum
public enum PropertyTypeType {


    /**
     * Composition.
     * 
     */
    @XmlEnumValue("Composition")
    COMPOSITION("Composition"),

    /**
     * Physical property.
     * 
     */
    @XmlEnumValue("Physical")
    PHYSICAL("Physical"),

    /**
     * Chemical property.
     * 
     */
    @XmlEnumValue("Chemical")
    CHEMICAL("Chemical"),

    /**
     * Thermodynamics property.
     * 
     */
    @XmlEnumValue("Thermodynamics")
    THERMODYNAMICS("Thermodynamics"),

    /**
     * Kinetics property.
     * 
     */
    @XmlEnumValue("Kinetics")
    KINETICS("Kinetics"),

    /**
     * Transport property.
     * 
     */
    @XmlEnumValue("Transport")
    TRANSPORT("Transport"),

    /**
     * Thermal property.
     * 
     */
    @XmlEnumValue("Thermal")
    THERMAL("Thermal"),

    /**
     * Mechanical property.
     * 
     */
    @XmlEnumValue("Mechanical")
    MECHANICAL("Mechanical"),

    /**
     * Geometrical property.
     * 
     */
    @XmlEnumValue("Geometrical")
    GEOMETRICAL("Geometrical"),

    /**
     * Cost property.
     * 
     */
    @XmlEnumValue("Cost")
    COST("Cost"),

    /**
     * Other property.
     * 
     */
    @XmlEnumValue("PropertyOther")
    PROPERTY_OTHER("PropertyOther");
    private final String value;

    PropertyTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PropertyTypeType fromValue(String v) {
        for (PropertyTypeType c: PropertyTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
