//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.22 at 11:59:10 AM EDT 
//


package org.eclipse.ice.datastructures.batteryml;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;


/**
 * Base type for all single list values. To be restricted.
 * 
 * <p>Java class for AnySingleListValueType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AnySingleListValueType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element ref="{BatteryML:2.0}Int32List"/>
 *           &lt;element ref="{BatteryML:2.0}Int64List"/>
 *           &lt;element ref="{BatteryML:2.0}PositiveIntList"/>
 *           &lt;element ref="{BatteryML:2.0}NonNegativeIntList"/>
 *           &lt;element ref="{BatteryML:2.0}NonNegativeInt32List"/>
 *           &lt;element ref="{BatteryML:2.0}NonNegativeInt64List"/>
 *           &lt;element ref="{BatteryML:2.0}Float32List"/>
 *           &lt;element ref="{BatteryML:2.0}Float64List"/>
 *           &lt;element ref="{BatteryML:2.0}ShortNameList"/>
 *           &lt;element ref="{BatteryML:2.0}BooleanList"/>
 *           &lt;element ref="{BatteryML:2.0}DateTimeList"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AnySingleListValueType", propOrder = {
    "int32List",
    "int64List",
    "positiveIntList",
    "nonNegativeIntList",
    "nonNegativeInt32List",
    "nonNegativeInt64List",
    "float32List",
    "float64List",
    "shortNameList",
    "booleanList",
    "dateTimeList"
})
@XmlSeeAlso({
    AnySingleListNumericValueType.class
})
public class AnySingleListValueType {

    @XmlList
    @XmlElement(name = "Int32List", type = Integer.class)
    protected List<Integer> int32List;
    @XmlList
    @XmlElement(name = "Int64List", type = Long.class)
    protected List<Long> int64List;
    @XmlList
    @XmlElement(name = "PositiveIntList", type = Long.class)
    protected List<Long> positiveIntList;
    @XmlList
    @XmlElement(name = "NonNegativeIntList", type = Long.class)
    protected List<Long> nonNegativeIntList;
    @XmlList
    @XmlElement(name = "NonNegativeInt32List", type = Long.class)
    protected List<Long> nonNegativeInt32List;
    @XmlList
    @XmlElement(name = "NonNegativeInt64List")
    protected List<BigInteger> nonNegativeInt64List;
    @XmlList
    @XmlElement(name = "Float32List", type = Float.class)
    protected List<Float> float32List;
    @XmlList
    @XmlElement(name = "Float64List", type = Double.class)
    protected List<Double> float64List;
    @XmlList
    @XmlElement(name = "ShortNameList")
    protected List<String> shortNameList;
    @XmlList
    @XmlElement(name = "BooleanList", type = Boolean.class)
    protected List<Boolean> booleanList;
    @XmlList
    @XmlElement(name = "DateTimeList")
    protected List<XMLGregorianCalendar> dateTimeList;

    /**
     * Gets the value of the int32List property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the int32List property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInt32List().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getInt32List() {
        if (int32List == null) {
            int32List = new ArrayList<Integer>();
        }
        return this.int32List;
    }

    /**
     * Gets the value of the int64List property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the int64List property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInt64List().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Long }
     * 
     * 
     */
    public List<Long> getInt64List() {
        if (int64List == null) {
            int64List = new ArrayList<Long>();
        }
        return this.int64List;
    }

    /**
     * Gets the value of the positiveIntList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the positiveIntList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPositiveIntList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Long }
     * 
     * 
     */
    public List<Long> getPositiveIntList() {
        if (positiveIntList == null) {
            positiveIntList = new ArrayList<Long>();
        }
        return this.positiveIntList;
    }

    /**
     * Gets the value of the nonNegativeIntList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nonNegativeIntList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNonNegativeIntList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Long }
     * 
     * 
     */
    public List<Long> getNonNegativeIntList() {
        if (nonNegativeIntList == null) {
            nonNegativeIntList = new ArrayList<Long>();
        }
        return this.nonNegativeIntList;
    }

    /**
     * Gets the value of the nonNegativeInt32List property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nonNegativeInt32List property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNonNegativeInt32List().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Long }
     * 
     * 
     */
    public List<Long> getNonNegativeInt32List() {
        if (nonNegativeInt32List == null) {
            nonNegativeInt32List = new ArrayList<Long>();
        }
        return this.nonNegativeInt32List;
    }

    /**
     * Gets the value of the nonNegativeInt64List property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nonNegativeInt64List property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNonNegativeInt64List().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BigInteger }
     * 
     * 
     */
    public List<BigInteger> getNonNegativeInt64List() {
        if (nonNegativeInt64List == null) {
            nonNegativeInt64List = new ArrayList<BigInteger>();
        }
        return this.nonNegativeInt64List;
    }

    /**
     * Gets the value of the float32List property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the float32List property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFloat32List().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Float }
     * 
     * 
     */
    public List<Float> getFloat32List() {
        if (float32List == null) {
            float32List = new ArrayList<Float>();
        }
        return this.float32List;
    }

    /**
     * Gets the value of the float64List property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the float64List property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFloat64List().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Double }
     * 
     * 
     */
    public List<Double> getFloat64List() {
        if (float64List == null) {
            float64List = new ArrayList<Double>();
        }
        return this.float64List;
    }

    /**
     * Gets the value of the shortNameList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the shortNameList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getShortNameList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getShortNameList() {
        if (shortNameList == null) {
            shortNameList = new ArrayList<String>();
        }
        return this.shortNameList;
    }

    /**
     * Gets the value of the booleanList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the booleanList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBooleanList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Boolean }
     * 
     * 
     */
    public List<Boolean> getBooleanList() {
        if (booleanList == null) {
            booleanList = new ArrayList<Boolean>();
        }
        return this.booleanList;
    }

    /**
     * Gets the value of the dateTimeList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dateTimeList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDateTimeList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XMLGregorianCalendar }
     * 
     * 
     */
    public List<XMLGregorianCalendar> getDateTimeList() {
        if (dateTimeList == null) {
            dateTimeList = new ArrayList<XMLGregorianCalendar>();
        }
        return this.dateTimeList;
    }

}
