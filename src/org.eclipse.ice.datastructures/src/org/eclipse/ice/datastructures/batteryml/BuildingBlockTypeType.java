//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.22 at 11:59:10 AM EDT 
//


package org.eclipse.ice.datastructures.batteryml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for BuildingBlockTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="BuildingBlockTypeType">
 *   &lt;restriction base="{BatteryML:2.0}ShortTokenType">
 *     &lt;enumeration value="Current Collector"/>
 *     &lt;enumeration value="Current Collector Positive"/>
 *     &lt;enumeration value="Current Collector Negative"/>
 *     &lt;enumeration value="Anode"/>
 *     &lt;enumeration value="Cathode"/>
 *     &lt;enumeration value="Separator"/>
 *     &lt;enumeration value="Coating"/>
 *     &lt;enumeration value="Electrolyte"/>
 *     &lt;enumeration value="Solvent"/>
 *     &lt;enumeration value="Salt"/>
 *     &lt;enumeration value="Additives"/>
 *     &lt;enumeration value="Binder"/>
 *     &lt;enumeration value="Insulation"/>
 *     &lt;enumeration value="Coolant"/>
 *     &lt;enumeration value="BuildingBlockAssembly"/>
 *     &lt;enumeration value="BuildingBlockOther"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "BuildingBlockTypeType")
@XmlEnum
public enum BuildingBlockTypeType {


    /**
     * Current Collector.
     * 
     */
    @XmlEnumValue("Current Collector")
    CURRENT_COLLECTOR("Current Collector"),

    /**
     * Current Collector Positive.
     * 
     */
    @XmlEnumValue("Current Collector Positive")
    CURRENT_COLLECTOR_POSITIVE("Current Collector Positive"),

    /**
     * Current Collector Negative.
     * 
     */
    @XmlEnumValue("Current Collector Negative")
    CURRENT_COLLECTOR_NEGATIVE("Current Collector Negative"),

    /**
     * Anode.
     * 
     */
    @XmlEnumValue("Anode")
    ANODE("Anode"),

    /**
     * Cathode.
     * 
     */
    @XmlEnumValue("Cathode")
    CATHODE("Cathode"),

    /**
     * Separator.
     * 
     */
    @XmlEnumValue("Separator")
    SEPARATOR("Separator"),

    /**
     * Coating.
     * 
     */
    @XmlEnumValue("Coating")
    COATING("Coating"),

    /**
     * Electrolyte.
     * 
     */
    @XmlEnumValue("Electrolyte")
    ELECTROLYTE("Electrolyte"),

    /**
     * Solvent.
     * 
     */
    @XmlEnumValue("Solvent")
    SOLVENT("Solvent"),

    /**
     * Salt.
     * 
     */
    @XmlEnumValue("Salt")
    SALT("Salt"),

    /**
     * Additives.
     * 
     */
    @XmlEnumValue("Additives")
    ADDITIVES("Additives"),

    /**
     * Binder.
     * 
     */
    @XmlEnumValue("Binder")
    BINDER("Binder"),

    /**
     * Insulation.
     * 
     */
    @XmlEnumValue("Insulation")
    INSULATION("Insulation"),

    /**
     * Coolant.
     * 
     */
    @XmlEnumValue("Coolant")
    COOLANT("Coolant"),

    /**
     * BuildingBlock assembly.
     * 
     */
    @XmlEnumValue("BuildingBlockAssembly")
    BUILDING_BLOCK_ASSEMBLY("BuildingBlockAssembly"),

    /**
     * Other component type.
     * 
     */
    @XmlEnumValue("BuildingBlockOther")
    BUILDING_BLOCK_OTHER("BuildingBlockOther");
    private final String value;

    BuildingBlockTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BuildingBlockTypeType fromValue(String v) {
        for (BuildingBlockTypeType c: BuildingBlockTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
