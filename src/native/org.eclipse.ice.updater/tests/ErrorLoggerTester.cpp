/*******************************************************************************
 * Copyright (c) 2012, 2014 UT-Battelle, LLC.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Initial API and implementation and/or initial documentation - Jay Jay Billings,
 *   Jordan H. Deyton, Dasha Gorin, Alexander J. McCaskey, Taylor Patterson,
 *   Claire Saunders, Matthew Wang, Anna Wojtowicz
 *******************************************************************************/

#define BOOST_TEST_DYN_LINK
#define BOOST_TEST_MODULE UpdaterTester_testSuite

#include <ErrorLogger.h>
#include <boost/shared_ptr.hpp>
#include <boost/test/included/unit_test.hpp>
#include "TesterUtils.h"

using namespace std;
using namespace boost;

/**
 * An ErrorLoggerPtr is a shared pointer object referring to a ErrorLogger instance.
 */
typedef shared_ptr<ErrorLogger> ErrorLoggerPtr;

BOOST_AUTO_TEST_SUITE(ErrorLoggerTester_testSuite)

/**
 * Checks the logError and dumpErrors operations.
 */
BOOST_AUTO_TEST_CASE(checkErrorLogging) {

    //Construct a new ErrorLogger instance.
    ErrorLoggerPtr errorLoggerPtr = ErrorLoggerPtr(new ErrorLogger());

    //Create a fake error for testing.
    string testErrorString = "This error was generated by the ErrorLoggerTester's checkErrorLogging operation.";

    //Log the fake error.
    errorLoggerPtr->logError(testErrorString);

    //Dump the error to a file.
    string filename = errorLoggerPtr->dumpErrors();

    //Get the contents of the file.
    string errorLogContents = TesterUtils::getLocalFileContents(filename);

    //Verify that the error output file contains the fake error.
    BOOST_REQUIRE(errorLogContents.find(testErrorString) != string::npos);

    return;
}

BOOST_AUTO_TEST_SUITE_END()
